#BlueJ class context
comment0.target=LEVEL
comment1.params=s
comment1.target=void\ setzeSpiel(SPIEL)
comment10.params=sekunden
comment10.target=void\ starteTickerNeu(double)
comment10.text=\r\n\ Startet\ den\ qrtest.Ticker\ neu.\r\n\r\n\ @param\ sekunden\ Die\ Zeit\ in\ Sekunden\ zwischen\ zwei\ Aufrufen\ der\ tick()-Methode.\r\n\ @see\ \#setzeTickerIntervall(double)\r\n\ @see\ \#tick()\r\n\ @see\ \#stoppeTicker()\r\n
comment11.params=
comment11.target=void\ tick()
comment11.text=\r\n\ Wird\ nach\ Aufruf\ von\ tickerNeuStarten(double)\ regelmaessig\ automatisch\ aufgerufen.\r\n\ So\ kommt\ Bewegung\ ins\ Spiel\!\r\n\ Tick-Intervall\ kann\ angepasst\ werden.\ qrtest.Ticker\ muss\ erst\ gestartet\ werden\!\r\n\ Tickerintervall\ kleiner\ 0.05\ vermeiden\ \!\!\!\ Dann\ lieber\ bildAktualisierungReagieren\ benutzen.\r\n\r\n\ @see\ \#starteTickerNeu(double)\r\n\ @see\ \#stoppeTicker()\r\n\ @see\ \#setzeTickerIntervall(double)\r\n
comment12.params=taste
comment12.target=void\ tasteReagieren(int)
comment12.text=\r\n\ Wird\ bei\ jedem\ <b>Druecken\ einer\ Taste/b>\ automatisch\ aufgerufen\r\n\ und\ automatisch\ das\ Kuerzel\ der\ entsprechenden\ Taste\ mitgegeben.\r\n\r\n\ @param\ taste\ ganzzahliges\ Kuerzel\ der\ Taste\r\n\ \ \ \ \ \ \ \ \ \ \ \ \ \ oder\ ENUM-Typ\ aus\ <b>Klasse\ qrtest.TASTE</b>\ (darin\ die\ Klassen-Doku\ lesen)\r\n
comment13.params=taste
comment13.target=void\ tasteLosgelassenReagieren(int)
comment13.text=\r\n\ Wird\ bei\ jedem\ <b>Loslassen\ einer\ Taste</b>\ automatisch\ aufgerufen\r\n\ und\ automatisch\ das\ Kuerzel\ der\ entsprechenden\ Taste\ mitgegeben.\r\n\r\n\ @param\ taste\ ganzzahliges\ Kuerzel\ der\ Taste\r\n\ \ \ \ \ \ \ \ \ \ \ \ \ \ oder\ ENUM-Typ\ aus\ <b>Klasse\ qrtest.TASTE</b>\ (darin\ die\ Klassen-Doku\ lesen)\r\n
comment14.params=taste
comment14.target=boolean\ istTasteGedrueckt(int)
comment14.text=\r\n\ Ueberprueft,\ ob\ eine\ <b>Taste\ gerade\ gedrueckt\ gehalten</b>\ wird.\r\n\r\n\ @param\ taste\ Der\ ganzzahlige\ Wert,\ der\ fuer\ die\ gedrueckte\ Taste\ steht.\r\n\ \ \ \ \ \ \ \ \ \ \ \ \ \ Details\ koennen\ im\ ENUM-Typen\ der\ <b>Klasse\ qrtest.TASTE</b>\ nachgelesen\ werden.\r\n\ @return\ true,\ falls\ die\ Taste\ gedrueckt\ gehalten\ wird.\r\n
comment15.params=x\ y
comment15.target=void\ klickReagieren(double,\ double)
comment15.text=\r\n\ Wird\ bei\ jedem\ <b>Mausklick\ (Linksklick)</b>\ automatisch\ aufgerufen.\r\n\ <b>\ \!\!\!\ Funktioniert\ nur,\ wenn\ ein\ Konstruktor\ von\ qrtest.SPIEL\ mit\ Maus-Unteratuetzung\ aufgerufen\ wurde\ \!\!\!\ </b>\r\n\r\n\ @param\ x\ Die\ X-Koordinate\ des\ Klicks\r\n\ @param\ y\ Die\ Y-Koordinate\ des\ Klicks\r\n
comment16.params=x\ y
comment16.target=void\ klickLosgelassenReagieren(double,\ double)
comment16.text=\r\n\ Wird\ bei\ jedem\ <b>Loslassen\ der\ Mausktaste\ (Linksklick)</b>\ automatisch\ aufgerufen.\r\n\ <b>\ \!\!\!\ Funktioniert\ nur,\ wenn\ ein\ Konstruktor\ von\ qrtest.SPIEL\ mit\ Maus-Unteratuetzung\ aufgerufen\ wurde\ \!\!\!\ </b>\r\n\r\n\ @param\ x\ Die\ X-Koordinate\ des\ Klicks\r\n\ @param\ y\ Die\ Y-Koordinate\ des\ Klicks\r\n
comment17.params=drehung
comment17.target=void\ mausRadReagieren(double)
comment17.text=\r\n\ Wird\ bei\ jedem\ <b>Drehen\ am\ Mausrad</b>\ automatisch\ aufgerufen.\r\n\ <b>\ \!\!\!\ Funktioniert\ nur,\ wenn\ ein\ Konstruktor\ von\ qrtest.SPIEL\ mit\ Maus-Unteratuetzung\ aufgerufen\ wurde\ \!\!\!\ </b>\r\n\r\n\ @param\ drehung\ Wie\ stark\ das\ Rad\ gedreht\ wurde,\ inkl.\ Vorzeichen\:\r\n\ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ +\ Mausrad\ von\ sich\ weg\ drehen\ ;\ \ -\ zu\ sich\ hin\ drehen\r\n
comment18.params=sekunden
comment18.target=void\ bildAktualisierungReagieren(double)
comment18.text=\r\n\ Wird\ fuer\ jeden\ Frame\ (Bild-Aktualisierung)\ des\ Spiels\ exakt\ einmal\ aufgerufen.\r\n\ Besser\ als\ "schneller"\ qrtest.Ticker\ (deren\ Tickerintervall\ kleiner\ als\ 0.05\ ist)\r\n\ <p>\r\n\ Extra-Info\ fuer\ Nerds\:\ nur\ in\ der\ aktuellen\ Szene\!\r\n\ -->\ EDU\ Games\ agieren\ in\ der\ Regel\ nur\ innerhalb\ einer\ Scene\ ("Hauptszene").\r\n\ Du\ kannst\ aber\ mehrere\ Szenen\ erzeugen.\r\n\r\n\ @param\ sekunden\ Die\ Anzahl\ an\ Sekunden,\ die\ seit\ dem\ letzten\ Frame\ vergangen\ sind.\r\n
comment19.params=dX\ dY
comment19.target=void\ verschiebeKamera(double,\ double)
comment19.text=\r\n\ Verschiebt\ die\ Kamera\ um\ ein\ Stueck.\r\n\r\n\ @param\ dX\ Anzahl\ Pixel\ in\ x-Richtung\r\n\ @param\ dY\ Anzahl\ Pixel\ in\ y-Richtung\r\n
comment2.params=
comment2.target=LEVEL()
comment20.params=zoom
comment20.target=void\ setzeKamerazoom(double)
comment20.text=\r\n\ Setzt\ den\ Zoom-Faktor\ der\ Kamera.\ 1.0\ ist\ normal.\r\n\r\n\ @param\ zoom\ Zoom-Faktor\:\ >1\ vergroessert\ ;\ <1\ (aber\ >0)\ verkleinert\r\n
comment21.params=
comment21.target=double\ nenneKamerazoom()
comment21.text=\r\n\ Nennt\ den\ aktuellen\ Zoom-Wert\ der\ Kamera.\r\n\r\n\ @return\ aktueller\ Zoom-Wert\ der\ Kamera\:\ >1\ vergroessert\ ;\ <1\ (aber\ >0)\ verkleinert\r\n
comment22.params=focus
comment22.target=void\ setzeKamerafokus(ea.edu.EduActor)
comment22.text=\r\n\ Setze\ den\ Kamera-Fokus\ auf\ ein\ bestimmtes\ Objekt.\r\n\r\n\ @param\ focus\ Das\ neue\ Objekt\ im\ Zentrum\ der\ Kamera\r\n
comment23.params=winkelInGrad
comment23.target=void\ rotiereKamera(double)
comment23.text=\r\n\ Rotiert\ die\ Kamera\ im\ oder\ gegen\ den\ Uhrzeigersinn.\r\n\r\n\ @param\ winkelInGrad\ Winkel,\ um\ den\ gedreht\ werden\ soll.\r\n\ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ >0\ im\ Uhrzeigersinn\ ;\ <0\ gegen\ den\ Uhrzeigersinn\r\n
comment24.params=winkelInGrad
comment24.target=void\ setzeKamerarotation(double)
comment24.text=\r\n\ Setzt\ den\ Rotationswinkel\ der\ Kamera\ auf\ einen\ bestimmten\ Wert.\r\n\r\n\ @param\ winkelInGrad\ Der\ neue\ Kamera-Winkel\ in\ Grad\r\n
comment25.params=name
comment25.target=void\ benenneSzene(java.lang.String)
comment25.text=\r\n\ Benennt\ eine\ Szene\r\n\r\n\ @param\ name\ neuer\ Name\ der\ Szene\r\n
comment26.params=name
comment26.target=void\ setzeSzene(java.lang.String)
comment26.text=\r\n\ Laedt\ eine\ (andere)\ Szene\r\n\r\n\ @param\ name\ Name\ der\ zu\ ladenden\ Szene\r\n
comment27.params=
comment27.target=void\ neueSzene()
comment27.text=\r\n\ Erzeugt\ eine\ neue\ Szene\r\n
comment28.params=nachricht
comment28.target=void\ zeigeNachricht(java.lang.String)
comment28.text=\r\n\ Gibt\ ein\ <b>blockierendes</b>\ Nachricht-Fenster\ aus.\r\n\r\n\ @param\ nachricht\ angezeigte\ Nachricht\ in\ dem\ Fenster\r\n
comment29.params=frage
comment29.target=boolean\ zeigeNachrichtMitJaNein(java.lang.String)
comment29.text=\r\n\ Gibt\ ein\ <b>blockierendes</b>\ Frage-Fenster\ aus.\r\n\r\n\ @param\ frage\ angezeigte\ Frage\ in\ dem\ Fenster\r\n\ @return\ 'true'\ \=\ Ja\ ,\ 'false'\ \=\ Nein\r\n
comment3.params=maus\ tastatureingabe\ bildAktualisierung
comment3.target=LEVEL(boolean,\ boolean,\ boolean)
comment30.params=frage
comment30.target=boolean\ zeigeNachrichtMitBestaetigung(java.lang.String)
comment30.text=\r\n\ Gibt\ ein\ <b>blockierendes</b>\ Frage-Fenster\ aus.\r\n\r\n\ @param\ frage\ angezeigte\ Frage\ in\ dem\ Fenster\r\n\ @return\ 'true'\ \=\ Ok\ ,\ 'false'\ \=\ Abbrechen\r\n
comment31.params=nachricht
comment31.target=java.lang.String\ zeigeNachrichtMitEingabe(java.lang.String)
comment31.text=\r\n\ Gibt\ ein\ <b>blockierendes</b>\ Eingabe-Fenster\ aus.\r\n\r\n\ @param\ angezeigte\ Nachricht\ in\ dem\ Fenster\r\n\ @return\ Benutzer-Eingabe\r\n
comment32.params=meterProQuadratsekunde
comment32.target=void\ setzeSchwerkraft(double)
comment32.text=\r\n\ Setzt\ die\ Intensitaet\ der\ Schwerkraft\ (normal\=9.8).\r\n\r\n\ @param\ meterProQuadratsekunde\ Wert\ fuer\ die\ gewuenschte\ Fallbeschleunigung\r\n
comment33.params=runnable
comment33.target=void\ parallel(java.lang.Runnable)
comment33.text=\r\n\ Die\ Methode\ 'parallel'\ erwartet\ einen\ Lambda-Ausdruck\ der\ Form\:\r\n\ ()\ ->\ methodenAufruf(parameterListe)\ \ \ oder\r\n\ ()\ ->\ {methode1(...);methode2(...);...;}\r\n\ <b>Das\ ist\ z.B.\ noetig,\ wenn\ eine\ Methode\ mit\ 'warte(...)'\ durch\ Tasten\ ausgefuehrt\ werden\ soll\!</b>\r\n\r\n\ @param\ runnable\ Ein\ oder\ mehrere\ Methodenaufrufe\ als\ Lambda-Ausdruck\r\n
comment4.params=pfad
comment4.target=void\ setzeHintergrundgrafik(java.lang.String)
comment5.params=von\ bis
comment5.target=int\ zufallsGanzzahlVonBis(int,\ int)
comment5.text=\r\n\ Gibt\ eine\ ganzzahlige\ Zufallszahl\ aus.\r\n\r\n\ @param\ von\ Die\ Untergrenze\ der\ Zufallszahl\ (INKLUSIVE)\r\n\ @param\ bis\ Die\ Obergrenze\ der\ Zufallszahl\ (INKLUSIVE)\r\n\ @return\ Eine\ Zufallszahl\ z\ mit\:\ \ \ von\ <\=\ z\ <\=\ bis\r\n
comment6.params=von\ bis
comment6.target=double\ zufallsKommazahlVonBis(double,\ double)
comment6.text=\r\n\ Gibt\ eine\ Komma-Zufallszahl\ aus.\r\n\r\n\ @param\ von\ Die\ Untergrenze\ der\ Zufallszahl\ (INKLUSIVE)\r\n\ @param\ bis\ Die\ Obergrenze\ der\ Zufallszahl\ (INKLUSIVE)\r\n\ @return\ Eine\ Komma-Zufallszahl\ z\ mit\:\ \ \ von\ <\=\ z\ <\=\ bis\r\n
comment7.params=sekunden
comment7.target=void\ warte(double)
comment7.text=\r\n\ Wartet\ um\ die\ Angegebene\ Anzahl\ an\ Millisekunden\ BLOCKIEREND\ bis\ zur\ Ausfuehrung\ des\ naechsten\ Befehls.\r\n\r\n\ <b>\ \!\!\!\ V\ O\ R\ S\ I\ C\ H\ T\ \!\!\!\ \ Nur\ verwenden\ bei\ reiner\ Grafik\ ohne\ Engine-Alpha\ Automatismen\ \!\!\!\ <br\ />\r\n\ <p>\r\n\ Geht\ NICHT\ mit\ tick(),\ tasteReagieren(...),\ mausReagieren(...),\ ...\ \!\!\!\ </b>\r\n\r\n\ @param\ sekunden\ Die\ zu\ wartende\ Zeit\ in\ Sekunden\r\n
comment8.params=sekunden
comment8.target=void\ setzeTickerIntervall(double)
comment8.text=\r\n\ Setzt\ das\ qrtest.Ticker-Intervall.\r\n\r\n\ @param\ sekunden\ Die\ Zeit\ in\ Sekunden\ zwischen\ zwei\ Aufrufen\ der\ tick()-Methode.\r\n\ @see\ \#starteTickerNeu(double)\r\n\ @see\ \#stoppeTicker(double)\r\n\ @see\ \#tick()\r\n
comment9.params=
comment9.target=void\ stoppeTicker()
comment9.text=\r\n\ Stoppt\ die\ qrtest.Ticker-Funktion.\ Die\ tick()-Methode\r\n\ wird\ nicht\ weiter\ aufgerufen.\ Der\ automatische\ Aufruf\ der\r\n\ tick()-Methode\ kann\ durch\ die\ Methode\r\n\ tickerNeuStarten(double\ sekunden)\ wiedergestartet\ werden.\r\n\r\n\ @see\ \#starteTickerNeu(double)\r\n\ @see\ \#setzeTickerIntervall(double)\r\n\ @see\ \#stoppeTicker(double)\r\n
numComments=34
